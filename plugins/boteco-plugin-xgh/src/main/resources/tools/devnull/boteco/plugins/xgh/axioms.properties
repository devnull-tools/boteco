#
# The MIT License
#
# Copyright (c) 2016 Marcelo "Ataxexe" Guimar√£es <ataxexe@devnull.tools>
#
# Permission  is hereby granted, free of charge, to any person obtaining
# a  copy  of  this  software  and  associated  documentation files (the
# "Software"),  to  deal  in the Software without restriction, including
# without  limitation  the  rights to use, copy, modify, merge, publish,
# distribute,  sublicense,  and/or  sell  copies of the Software, and to
# permit  persons to whom the Software is furnished to do so, subject to
# the following conditions:
# The  above  copyright  notice  and  this  permission  notice  shall be
# included  in  all  copies  or  substantial  portions  of the Software.
#
# THE  SOFTWARE  IS  PROVIDED  "AS  IS",  WITHOUT  WARRANTY OF ANY KIND,
# EXPRESS  OR  IMPLIED,  INCLUDING  BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN  NO  EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM,  DAMAGES  OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT  OR  OTHERWISE,  ARISING  FROM,  OUT OF OR IN CONNECTION WITH THE
# SOFTWARE   OR   THE   USE   OR   OTHER   DEALINGS  IN  THE  SOFTWARE.
#

axiom.1.title = I think therefore it's not XGH.
axiom.1.description = In XGH you don't think, you do the first thing that comes to your mind. There's not a second \
  option as the first one is faster.

axiom.2.title = There are 3 ways of solving a problem: the right way, the wrong way and the XGH way which is exactly \
  like the first one but faster.
axiom.2.description = XGH is faster than any development process you know (see Axiom 14).

axiom.3.title = You'll always need to do more and more XGH.
axiom.3.description = For every solved problem using XGH 7 more are created. And all of them will be solved using XGH. \
  Therefore XGH tends to the infinite.

axiom.4.title = XGH is completely reactive.
axiom.4.description = Errors only come to exist when they appear.

axiom.5.title = In XGH anything goes.
axiom.5.description = It solves the problem? It compiled? You commit and don't think about it anymore.

axiom.6.title = You commit always before updating.
axiom.6.description = If things go wrong your part will always be correct... and your colleagues will be the ones \
  dealing with the problems.

axiom.7.title = XGH don't have schedules.
axiom.7.description = Schedules given to you by your clients are all but important. You will ALWAYS be able to implement \
  EVERYTHING in time (even if that means accessing the DB through some crazy script).

axiom.8.title = Be ready to jump off when the boat starts sinking. Or blame someone else.
axiom.8.description = For people using XGH someday the boat sinks. As time passes by the system grows into a bigger \
  monster. You better have your resume ready for when the thing comes down. Or have someone else to blame.

axiom.9.title = Be authentic. XGH don't follow patterns.
axiom.9.description = Write code as you may want. If it solves the problem you must commit and forget about it.

axiom.10.title = There's no refactoring just rework.
axiom.10.description = If things ever go wrong just use XGH to quickly solve the problem. Whenever the problem requires \
  rewriting the whole software it's time for you to drop off before the whole thing goes down.

axiom.11.title = XGH is anarchic.
axiom.11.description = There's no need for a project manager. There's no owner and everyone does whatever they want \
  when the problems and requirements appear.

axiom.12.title = Always believe in improvement promises.
axiom.12.description = Putting TODO comments in the code as a promise that the code will be improved later helps the \
  XGH developer. He/She won't feel guilt for the shit he/she did. Sure there won't be no refactoring (see Axiom 10).

axiom.13.title = XGH is absolute.
axiom.13.description = Delivery dates and costs are absolute things. Quality is relative. Never think about quality but \
  instead think about the minimum time required to implement a solution. Actually, don't think. Do!

axiom.14.title = XGH is not a fad.
axiom.14.description = Scrum, XP? Those are just trends. XGH developers don't follow temporary trends. XGH will always \
  be used by those who despise quality.

axiom.15.title = XGH is not always WOP (Workaround-oriented programming).
axiom.15.description = Many WOP require smart thinking. XGH requires no thinking (see Axiom 1).

axiom.16.title = Don't try to row against the tide.
axiom.16.description = If your colleagues use XGH and you are the only sissy who wants to do things the right way then \
  quit it! For any design pattern that you apply correctly your colleagues will generate 10 times more rotten code \
  using XGH.

axiom.17.title = XGH is not dangerous until you see some order in it.
axiom.17.description = This axiom is very complex but it says that a XGH project is always in chaos. Don't try to put \
  order into XGH (see Axiom 16). It's useless and you'll spend a lot of precious time. This will make things go down \
  even faster. Don't try to manage XGH as it's auto-sufficient (see Axiom 11) as it's also chaos.

axiom.18.title = XGH is your bro. But it's vengeful.
axiom.18.description = While you want it XGH will always be at your side. But be careful not to abandon him. If you \
  start something using XGH and then turn to some trendy methodology you will be fucked up. XGH doesn't allow \
  refactoring (see Axiom 10) and your new sissy system will collapse. When that happens only XGH can save you.

axiom.19.title = If it's working don't bother.
axiom.19.description = Never ever change - or even think of question - a working code. That's a complete waste of time \
  even more because refactoring doesn't exist (see Axiom 10). Time is the engine behind XGH and quality is just a \
  meaningless detail.

axiom.20.title = Tests are for pussies.
axiom.20.description = If you ever worked with XGH you better know what you're doing. And if you know what you're doing \
  why test then? Tests are a waste of time. If it compiles it's good.

axiom.21.title = Be used to the 'living on the edge' feeling.
axiom.21.description = Failure and success are really similar and XGH is not different. People normally think that a \
  project can have greater chances of failing when using XGH. But success is just a way of seeing it. The project \
  failed. You learned something with it? Then for you it was a success!

axiom.22.title = The problem is only yours when you name is on the code docs.
axiom.22.description = Never touch a class of code which you're not the author. When a team member dies or stays away \
  for too long the thing will go down. When that happens use Axiom 8.