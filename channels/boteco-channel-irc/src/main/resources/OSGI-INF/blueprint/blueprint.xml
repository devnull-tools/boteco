<!--
  ~ The MIT License
  ~
  ~ Copyright (c) 2016 Marcelo "Ataxexe" GuimarÃ£es <ataxexe@devnull.tools>
  ~
  ~ Permission  is hereby granted, free of charge, to any person obtaining
  ~ a  copy  of  this  software  and  associated  documentation files (the
  ~ "Software"),  to  deal  in the Software without restriction, including
  ~ without  limitation  the  rights to use, copy, modify, merge, publish,
  ~ distribute,  sublicense,  and/or  sell  copies of the Software, and to
  ~ permit  persons to whom the Software is furnished to do so, subject to
  ~ the following conditions:
  ~ The  above  copyright  notice  and  this  permission  notice  shall be
  ~ included  in  all  copies  or  substantial  portions  of the Software.
  ~
  ~ THE  SOFTWARE  IS  PROVIDED  "AS  IS",  WITHOUT  WARRANTY OF ANY KIND,
  ~ EXPRESS  OR  IMPLIED,  INCLUDING  BUT NOT LIMITED TO THE WARRANTIES OF
  ~ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  ~ IN  NO  EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  ~ CLAIM,  DAMAGES  OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  ~ TORT  OR  OTHERWISE,  ARISING  FROM,  OUT OF OR IN CONNECTION WITH THE
  ~ SOFTWARE   OR   THE   USE   OR   OTHER   DEALINGS  IN  THE  SOFTWARE.
  -->

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

  <cm:property-placeholder id="irc.properties"
                           persistent-id="tools.devnull.boteco.channel.irc"
                           placeholder-prefix="{{"
                           placeholder-suffix="}}">
    <cm:default-properties>
      <cm:property name="income.enable" value="false"/>
      <cm:property name="outcome.enable" value="false"/>
      <cm:property name="connection.check" value="false"/>
      <cm:property name="connection.check.interval" value="1m"/>
      <cm:property name="connection.check.trace" value="false"/>


      <cm:property name="irc.nick" value="boteco"/>
      <cm:property name="irc.server" value="localhost"/>
      <cm:property name="irc.port" value="6667"/>
      <!-- The prefix that defines a bot command -->
      <cm:property name="bot.command.prefix" value="{{irc.nick}}[,:]?\s+"/>
      <!-- The options to apply to the irc component -->
      <cm:property name="irc.options" value=""/>

      <cm:property name="trace" value="false"/>
      <cm:property name="shutdown.time" value="10"/>
    </cm:default-properties>
  </cm:property-placeholder>

  <bean id="service-registry" class="tools.devnull.boteco.OsgiServiceRegistry"/>

  <bean id="command-extractor" class="tools.devnull.boteco.message.PrefixCommandExtractor">
    <argument value="{{bot.command.prefix}}"/>
  </bean>

  <bean id="channel" class="tools.devnull.boteco.channel.irc.IrcChannel">
    <argument ref="command-extractor"/>
    <argument ref="service-registry"/>
  </bean>

  <service interface="tools.devnull.boteco.Channel" ref="channel">
    <service-properties>
      <entry key="id" value="irc"/>
    </service-properties>
  </service>

  <reference id="message-dispatcher" interface="tools.devnull.boteco.message.MessageDispatcher"/>

  <reference id="user-manager" interface="tools.devnull.boteco.user.UserManager"/>

  <bean id="irc-income-processor" class="tools.devnull.boteco.channel.irc.IrcIncomeProcessor">
    <argument ref="channel"/>
    <argument ref="message-dispatcher"/>
    <argument ref="user-manager"/>
  </bean>

  <bean id="irc-outcome-processor" class="tools.devnull.boteco.channel.irc.IrcOutcomeProcessor">
    <argument>
      <reference interface="tools.devnull.boteco.message.FormatExpressionParser"/>
    </argument>
    <argument>
      <bean class="tools.devnull.boteco.channel.irc.IrcContentFormatter"/>
    </argument>
    <argument ref="service-registry"/>
  </bean>

  <bean id="irc" class="tools.devnull.boteco.channel.irc.BotecoIrcComponent">
    <argument>
      <reference interface="tools.devnull.boteco.plugins.irc.spi.IrcChannelsRepository"/>
    </argument>
    <argument>
      <reference interface="tools.devnull.boteco.event.EventBus"/>
    </argument>
    <argument ref="boteco-channel-irc"/>
  </bean>

  <bean id="shutdown" class="org.apache.camel.impl.DefaultShutdownStrategy">
    <property name="timeout" value="{{shutdown.time}}"/>
  </bean>

  <camelContext id="boteco-channel-irc"
                trace="{{trace}}"
                xmlns="http://camel.apache.org/schema/blueprint">

    <route id="boteco.message.from.irc" autoStartup="{{income.enable}}">
      <from
          uri="irc:{{irc.nick}}@{{irc.server}}:{{irc.port}}?{{irc.options}}&amp;onNick=false&amp;onQuit=false&amp;onJoin=false&amp;onKick=false&amp;onMode=false&amp;onPart=false&amp;onTopic=false"/>
      <log logName="boteco-channel-irc"
           loggingLevel="DEBUG"
           message="received message from irc"/>
      <process ref="irc-income-processor"/>
    </route>

    <route id="boteco.message.to.irc" autoStartup="{{outcome.enable}}">
      <from uri="activemq:queue:boteco.message.irc"/>
      <log logName="boteco-channel-irc"
           loggingLevel="INFO"
           message="sending message through irc"/>
      <process ref="irc-outcome-processor"/>
      <split>
        <tokenize token="\n"/>
        <to uri="irc:{{irc.nick}}@{{irc.server}}:{{irc.port}}"/>
      </split>
    </route>

    <route id="boteco.irc.check" autoStartup="{{connection.check}}"
           shutdownRunningTask="CompleteCurrentTaskOnly">
      <from uri="timer:irc-check?period={{connection.check.interval}}"/>
      <choice>
        <when>
          <simple>${bean:irc.isDisconnected}</simple>
          <log message="Trying to reconnect to IRC"/>
          <to uri="bean:irc?method=reconnect"/>
        </when>
      </choice>
    </route>

  </camelContext>

  <reference id="activemq" interface="org.apache.camel.Component" filter="&amp;(component=activemq)(bundle=boteco)"/>

</blueprint>
